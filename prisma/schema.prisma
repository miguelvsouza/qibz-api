generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  nickname  String
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  member Member?

  @@map("users")
}

model Member {
  id         String   @id @default(cuid())
  userId     String   @unique @map("user_id")
  fullName   String   @map("full_name")
  document   String   @unique
  address    String
  number     String
  complement String
  district   String
  cityId     Int      @map("city_id")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  user      User             @relation(fields: [userId], references: [id])
  cities    City             @relation(fields: [cityId], references: [id])
  companies CompanyMembers[]
  invoices  Invoice[]

  @@map("members")
}

model Company {
  id           String   @id @default(cuid())
  name         String
  document     String   @unique
  creationDate DateTime @map("creation_date")
  shareCapital Float    @map("share_capital")
  address      String
  number       String
  complement   String
  district     String
  cnaeId       String   @map("cnae_id")
  cityId       Int      @map("city_id")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  cities     City               @relation(fields: [cityId], references: [id])
  members    CompanyMembers[]
  taxRegimes CompanyTaxRegime[]
  invoices   Invoice[]
  cnae       Cnae               @relation(fields: [cnaeId], references: [id])
  events     CompanyEvents[]

  @@map("companies")
}

model CompanyTaxRegime {
  id          String    @id @default(cuid())
  companyId   String    @map("company_id")
  regime      Int // 1 - Simples Nacional, 2 - Lucro Presumido, 3 - Lucro Real
  initialDate DateTime  @map("initial_date")
  finalDate   DateTime? @map("final_date")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  company Company @relation(fields: [companyId], references: [id])

  @@map("company_tax_regimes")
}

model CompanyMembers {
  id                 String   @id @default(cuid())
  memberId           String   @map("member_id")
  companyId          String   @map("company_id")
  memberShareCapital Float    @map("member_share_capital")
  legallyResponsible Boolean  @default(false) @map("legally_responsible")
  createdAt          DateTime @default(now()) @map("created_at")
  updatedAt          DateTime @updatedAt @map("updated_at")

  companies Company @relation(fields: [companyId], references: [id])
  members   Member  @relation(fields: [memberId], references: [id])

  @@map("company_members")
}

model City {
  id        Int      @id
  name      String
  state     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  companies         Company[]
  members           Member[]
  invoiceRecipients InvoiceRecipient[]

  @@map("cities")
}

model InvoiceRecipient {
  id                    String    @id @default(cuid())
  name                  String
  isCompany             Boolean   @map("is_company")
  document              String    @unique
  creationDate          DateTime? @map("creation_date")
  municipalRegistration String?   @map("municipal_registration")
  stateRegistration     String?   @map("state_registration")
  address               String
  number                String
  complement            String
  district              String
  cityId                Int       @map("city_id")
  createdAt             DateTime  @default(now()) @map("created_at")
  updatedAt             DateTime  @updatedAt @map("updated_at")

  cities   City      @relation(fields: [cityId], references: [id])
  invoices Invoice[]

  @@map("invoice_recipients")
}

model Invoice {
  id            String   @id @default(cuid())
  companyId     String   @map("company_id")
  memberId      String   @map("member_id")
  recipientId   String   @map("recipient_id")
  status        String
  invoiceNumber String   @map("invoice_number")
  issueDate     DateTime @map("issue_date")
  cnaeId        String   @map("cnae_id")
  amount        Float
  decuctIss     Boolean  @map("deduct_iss")
  iss           Float
  ir            Float
  csll          Float
  cofins        Float
  pis           Float
  inss          Float
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  company   Company          @relation(fields: [companyId], references: [id])
  member    Member           @relation(fields: [memberId], references: [id])
  recipient InvoiceRecipient @relation(fields: [recipientId], references: [id])
  cnae      Cnae             @relation(fields: [cnaeId], references: [id])

  @@map("invoices")
}

model Cnae {
  id        String   @id @default(cuid())
  code      String   @unique
  title     String
  lc116     String?
  group     Int?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  companies Company[]
  invoices  Invoice[]

  @@map("cnaes")
}

model SimpleNationalGroup {
  id                  String    @id @default(cuid())
  group               Int
  validityStart       DateTime  @map("validity_start")
  validityEnd         DateTime? @map("validity_end")
  range               Int
  minimumGrossRevenue Float     @map("minimum_gross_revenue")
  maximumGrossRevenue Float     @map("maximum_gross_revenue")
  rate                Float
  deductionAmount     Float     @map("deduction_amount")
  taxIrpj             Float     @map("tax_irpj")
  taxCsll             Float     @map("tax_csll")
  taxCofins           Float     @map("tax_cofins")
  taxPis              Float     @map("tax_pis_pasep")
  taxCpp              Float     @map("tax_cpp")
  taxIcms             Float     @map("tax_icms")
  taxIss              Float     @map("tax_iss")
  createdAt           DateTime  @default(now()) @map("created_at")
  updatedAt           DateTime  @updatedAt @map("updated_at")

  @@map("simple_national_groups")
}

model Event {
  id        String   @id @default(cuid())
  name      String
  type      Int // 1 - receipt | 2 - discount | 3 - information
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  companies CompanyEvents[]

  @@map("events")
}

model CompanyEvents {
  id        String   @id @default(cuid())
  companyId String   @map("company_id")
  eventId   String   @map("event_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  companies Company @relation(fields: [companyId], references: [id])
  events    Event   @relation(fields: [eventId], references: [id])

  @@map("company_events")
}
